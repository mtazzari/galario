name: Test and build docs

# branch filtering:
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet

# workflows running on Linux and MacOS have passwordless sudo rights:
# https://stackoverflow.com/questions/57982945/how-to-apt-get-install-in-a-github-actions-workflow

on: push
#    branches:
#      # Push events to all branches except master
#      # https://stackoverflow.com/questions/57699839/github-actions-how-to-target-all-branches-except-master
#      - '**'
#      - '!master'

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-20.04
    defaults:
      run:
        # pinning the shell name helps to properly set conda
        shell: bash -l {0}
    strategy:
      matrix:
        python-version: [3.7]
#        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v2
#        with:
#          python-version: ${{ matrix.python-version }}
      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: foo
          python-version: ${{ matrix.python-version }}
          channels: conda-forge
          allow-softlinks: true
          channel-priority: flexible
          show-channel-urls: true
          use-only-tar-bz2: true
      - run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install FFTW3
        run: sudo apt-get install libfftw3-dev

      - name: Install conda environment
        run: |
          conda config --set always_yes yes --set changeps1 no
          conda update -q conda
          conda info -a
          conda config --add channels conda-forge
#          wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
#          bash miniconda.sh -b -p $HOME/miniconda
#          export PATH="$HOME/miniconda/bin:$PATH"
#          hash -r
      - name: Build and install galario
        run: |
          conda init bash
          conda create -q -n test-environment python=${{ matrix.python-version }} astropy cython nomkl numpy pytest scipy sphinx
          conda activate test-environment
          pip install coverage codecov pytest-cov
          mkdir build && cd build
          cmake -DCMAKE_INSTALL_PREFIX=/tmp -DCMAKE_PREFIX_PATH=${CONDA_PREFIX} ..
          make
          make install
      - name: Run unit tests
        run: python/py.test.sh -sv --cov=./ python/test_galario.py
      - name: Upload code coverage report
        run: bash <(curl -s https://codecov.io/bash) || echo 'Codecov failed to upload'
